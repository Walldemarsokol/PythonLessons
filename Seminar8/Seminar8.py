# 1. Написать функцию num_translate(), переводящую числительные от 0 до 10 c английского на русский язык. 
# Например:
# >>> num_translate("one")
# "один"
# >>> num_translate("eight")
# "восемь"
# Если перевод сделать невозможно, вернуть None. Подумайте, как и где лучше хранить информацию, 
# необходимую для перевода: какой тип данных выбрать, в теле функции или снаружи.
# 3. Написать функцию thesaurus(), принимающую в качестве аргументов имена сотрудников и возвращающую словарь, в котором ключи — первые буквы имён, а значения — списки, содержащие имена, начинающиеся с соответствующей буквы. Например:
# >>>  thesaurus("Иван", "Мария", "Петр", "Илья")
# {
#     "И": ["Иван", "Илья"], 
#     "М": ["Мария"], "П": ["Петр"]
# }
# Подумайте: полезен ли будет вам оператор распаковки? Как поступить, если потребуется сортировка по ключам? Можно ли использовать словарь в этом случае?

# 4. * (вместо задачи 3) Написать функцию thesaurus_adv(), принимающую в 
# качестве аргументов строки в формате «Имя Фамилия» и возвращающую словарь, 
# в котором ключи — первые буквы фамилий, а значения — словари,
#  реализованные по схеме предыдущего задания и содержащие записи, 
# в которых фамилия начинается с соответствующей буквы. Например:
# >>> thesaurus_adv("Иван Сергеев", "Инна Серова", "Петр Алексеев", 
# "Илья Иванов", "Анна Савельева")
# {
#     "А": {
#         "П": ["Петр Алексеев"]
#     },
#     "И": {
#         "И": ["Илья Иванов"]
#     },
#     "С": {
#         "И": ["Иван Сергеев", "Инна Серова"], 
#         "А": ["Анна Савельева"]
#     }
# }
# Как поступить, если потребуется сортировка по ключам?

def thesaurus(*args):
    some_list = list(args)
    some_dict = {}
    for i in range(len(some_list)):
        if some_list[i][0] in some_dict.keys():
            some_dict[some_list[i][0]].append(some_list[i])
        else:
            some_dict[some_list[i][0]] = [some_list[i]]
    print(some_dict)




thesaurus("Иван", "Мария", "Петр", "Илья", "Петро", "Федор")
