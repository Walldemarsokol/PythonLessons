import os
clear = lambda: os.system('clear')  # При использовании MacOS или Linux
clear = lambda: os.system('CLS')  # При использовании Windows
clear()


#Test1/
#  Дан список: ['в', '5', 'часов', '17', 'минут', 'температура', 'воздуха', 'была', '+5', 'градусов']
# a)Необходимо его обработать — обособить каждое целое число (вещественные не трогаем) кавычками 
# (добавить кавычку до и кавычку после элемента списка,являющегося числом) 
# и дополнить нулём до двух целочисленных разрядов:
# ['в', '"', '05', '"', 'часов', '"', '17', '"', 'минут', 'температура', 'воздуха', 'была', '"', '+05', '"', 'градусов']
# b)Сформировать из обработанного списка строку:
# в "05" часов "17" минут температура воздуха была "+05" градусов
# Подумать, какое условие записать, чтобы выявить числа среди элементов списка? 
# Как модифицировать это условие для чисел со знаком?
# Примечание: если обособление чисел кавычками не будет получаться - можете вернуться к его реализации позже. 
# Главное: дополнить числа до двух разрядов нулём!


#Решение 1, простое:
# some_list=['в', '5', 'часов', '17', 'минут', 'температура', 'воздуха', 'была', '+5', 'градусов']
# some_list[1],some_list[3],some_list[8]='"05"', '"17"','"+05"'
# some_list=str(some_list).replace(',','').replace("'","" )
# print(some_list)

# Решение 

some_list=['в', '5', 'часов', '17', 'минут', 'температура', 'воздуха', 'была', '+5', 'градусов']

def numbers(list):
    k = 0 #calc zero point
    zero='+0'
    for i in range(len(list)):  # run to list
        x=100 #
        for j in list[i]:  # run to str
            k+=1 # calc
            if j == '+':
                x=k
            if k-1==x:
                list[i]= zero + j
            elif j.isdigit():  # if j is number
                if len(list[i]) == 2:
                    break
                list[i] = '0' + j


def quote(list):
    new_list=[]
    for i in range(len(list)): #run to list  

        for j in list[i]:# run to str
            if j.isalpha():
                new_list.append(list[i])
                break
            if j.isdigit():
                new_list.append(' "')
                new_list.append(list[i])
                new_list.append('" ')
                break
    numbers(new_list)
    return new_list

print(quote(some_list))
print('')
some_list = str(quote(some_list)).replace(',','').replace("'","" ).replace('" ','"').replace(' "','"').replace('[','').replace(']','')
print(some_list)


# __________________________________________________________________
#Test2/
#  * (вместо задачи 2) Решить задачу 2 не создавая новый список (как говорят, in place). Эта задача намного серьёзнее, чем может сначала показаться.

#Решение первой задачи кажется произошло без создания нового списка, но я не уверен, пожалуйста, проверьте)))

# ______________________________________________________________________
# Test3/
# Дан список, содержащий искажённые данные с 
# должностями и именами сотрудников: ['инженер-конструктор Игорь', 'главный бухгалтер МАРИНА', 'токарь высшего разряда нИКОЛАй', 'директор аэлита']
# Известно, что имя сотрудника всегда в конце строки. 
# Сформировать и вывести на экран фразы вида: 'Привет, Игорь!' 
# , как получить имена сотрудников из элементов списка, как привести их к корректному виду. Можно ли при этом не создавать новый список?

#Решение:
# def reversed4(variable):
#     res=''.join(reversed(variable))
#     return res

# some_list=['инженер-конструктор Игорь', 'главный бухгалтер МАРИНА', 'токарь высшего разряда нИКОЛАй', 'директор аэлита']
# for i in some_list:
#     temp=reversed4(i)# reverse string
#     k=temp.index(' ') #find space index
#     temp=temp[0:k] # find name
#     temp=reversed4(temp)#back reverse
    
#     print('Привет, '+ temp.title() +'!')


#Отвечаю на вопрос: не пришлось создавать новый список.

# _________________________________________________________________________
# Test4/
# . Создать список, содержащий цены на товары (10–20 товаров), например:
# [57.8, 46.51, 97, ...]

# а)Вывести на экран эти цены через запятую в одну строку, цена должна отображаться в виде <r> руб <kk> коп (например «5 руб 04 коп»). 
# Подумать, как из цены получить рубли и копейки, как добавить нули, если, например, получилось 7 копеек или 0 копеек (должно быть 07 коп или 00 коп).
# б)Вывести цены, отсортированные по возрастанию, новый список не создавать (доказать, что объект списка после сортировки остался тот же).
# в)Создать новый список, содержащий те же цены, но отсортированные по убыванию.
# г)Вывести цены пяти самых дорогих товаров. Сможете ли вывести цены этих товаров по возрастанию, написав минимум кода?

# some_list = [34.51, 45.67, 234.05, 666, 78.03, 123, 234.34, 76, 654.67, 76.09, 45.65,23]

# def print_prices(list):
#     result=[]
#     for i in list:
       
#         if i%1 != 0:
#             change=str(round((i%1),2)).replace('0','',1).replace('.','')
#             result.append(str(int(i//1)) + ' руб ' + change + ' коп')
#         else:
#             result.append(str(i) + ' руб 00 коп')

#     return result

# print('Выводим цены хх руб xx коп:')

# print(print_prices(some_list))

# some_list.sort()

# print('Выводим цены по возрастанию:')

# print(print_prices(some_list))

# new_list=some_list

# new_list.sort(reverse=True)

# print('Выводим новый список цен сортированный по убыванию:')

# print(print_prices(new_list))

# print('Выводим цены TOP 5 самых доpогих товаров!(по возрастанию): ')

# top_5=[]
# k=0
# for i in new_list:
#     top_5.append(i)
#     k+=1
#     if k==5:
#         break

# top_5.sort()

# print(print_prices(top_5))
